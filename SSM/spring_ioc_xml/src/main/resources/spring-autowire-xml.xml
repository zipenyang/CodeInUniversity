<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">


<!--    <bean id="userController"
          class="com.qfnu.spring.controller.UserController" autowire="byName">
    </bean>
    <bean id="userService"
          class="com.qfnu.spring.service.impl.UserServiceImpl" autowire="byName">
    </bean>
    <bean id="userServiceImpl"
          class="com.qfnu.spring.service.impl.UserServiceImpl" autowire="byName">
    </bean>
    <bean id="userDao" class="com.qfnu.spring.dao.impl.UserDaoImpl"></bean>
    <bean id="userDaoImpl" class="com.qfnu.spring.dao.impl.UserDaoImpl">
    </bean>-->

    <!--自动装配：
    根据指定的策略，在IOC容器中匹配某一个bean，自动为指定的bean中所依赖的类类型或接口类
    型属性赋值，可以通过bean标签中的autowire属性设置自动装配的策略-->
    <!--自动装配的策略：
        1、no/default:表示不装配，即bean中的属性不会自动匹配某个bean为属性赋值，此时属性使用默认值
        2、byType：根据要赋值的属性的类型，在IOC容器中匹配某个bean为属性赋值
        注意：
        （1）若通过类型没有找到任何一个类型匹配的bean，此时不装配，属性使用默认值
        （2）若通过类型找到多个类型匹配的bean，此时抛出异常，NoUniqueBeanDefinitionException
        总结：当使用byType实现自动装配时，IOC容器中有且只有一个类型匹配的Bean能够为属性赋值
        3、byName：将要赋值的属性的属性名作为Bean的id在IOC容器中匹配某个Bean，为属性赋值
        总结：当类型匹配的Bean有多个时，可以使用byName实现自动装配
    -->

    <bean id="userController" class="com.qfnu.spring.controller.UserController" autowire="byName"></bean>

    <bean id="userService" class="com.qfnu.spring.service.impl.UserServiceImpl" autowire="byName"></bean>

    <bean id="userDao" class="com.qfnu.spring.dao.impl.UserDaoImpl" autowire="byName"></bean>

</beans>